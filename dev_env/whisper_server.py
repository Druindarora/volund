# whisper_server.py ‚Äì Serveur Whisper local pour Parlia

import os
import tempfile

# import uvicorn
import whisper
from fastapi import FastAPI, File, UploadFile
from fastapi.responses import JSONResponse

MODEL_NAME = "tiny"
print(f"[üîä Whisper Server] Chargement du mod√®le Whisper : '{MODEL_NAME}'...")
model = whisper.load_model(MODEL_NAME)
print("[‚úÖ] Mod√®le charg√© avec succ√®s.\n")

app = FastAPI()


@app.post("/transcribe")
async def transcribe(audio_file: UploadFile = File(...)):
    try:
        print(f"[üì•] Fichier re√ßu : {audio_file.filename}")
        with tempfile.NamedTemporaryFile(delete=False, suffix=".wav") as temp_audio:
            contents = await audio_file.read()
            temp_audio.write(contents)
            temp_audio_path = temp_audio.name
        print(f"[üß™] Fichier temporaire cr√©√© : {temp_audio_path}")

        result = model.transcribe(temp_audio_path)
        text = result["text"]
        print(
            f"[üìù] Transcription termin√©e : {text[:60]}{'...' if len(text) > 60 else ''}"
        )

        os.remove(temp_audio_path)
        print(f"[üßπ] Fichier temporaire supprim√©.")

        return JSONResponse(content={"text": text})

    except Exception as e:
        print(f"[‚ùå] Erreur lors de la transcription : {e}")
        return JSONResponse(content={"error": str(e)}, status_code=500)


if __name__ == "__main__":
    ...
