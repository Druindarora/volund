# sidebar.py

# Ce fichier d√©finit une Sidebar verticale minimaliste pour l'application V√∏lund.
# L'interface est d√©velopp√©e avec **PySide6 uniquement** (pas PyQt5 ni PyQt6).
# Il ne faut **importer que depuis PySide6**, sans d√©pendances tierces.

# üß± Objectif :
# Cr√©er une classe Sidebar bas√©e sur QFrame, affich√©e √† gauche de la fen√™tre principale.
# Elle contient :
# - un bouton "home" (üè†) en haut
# - une zone centrale vide pour les futurs modules favoris
# - un bouton "settings" (‚öôÔ∏è) en bas

# üìê Contraintes visuelles :
# - Disposition verticale avec QVBoxLayout
# - Largeur fixe r√©duite (50 px) pour ressembler √† une barre lat√©rale type IDE
# - Boutons centr√©s horizontalement
# - Un stretch vertical pour s√©parer le haut et le bas

# ‚úÖ Comportement actuel :
# - Chaque bouton est un QPushButton avec un emoji comme texte
# - Le layout est sans marges ni espacement
# - Aucun signal n‚Äôest connect√© pour l‚Äôinstant (statique)

# üé® Style :
# - Fond gris fonc√© (`#2b2b2b`)
# - Bordure verticale droite (1px) en gris clair (`#666`)
# - Boutons blancs avec l√©ger padding horizontal
# - Hover discret (`#3c3c3c`)
# - Le style est appliqu√© via un `objectName` (#Sidebar) pour cibler pr√©cis√©ment le widget

# üß© Structure interne :
# - `self.home_button` (üè†) plac√© en haut
# - `layout.addStretch()` pour s√©parer visuellement
# - `self.settings_button` (‚öôÔ∏è) plac√© en bas
# - Acc√®s possible via la m√©thode get_buttons()

# üìÇ √Ä venir :
# - Ajout dynamique des modules favoris dans la zone centrale
# - Gestion des √©tats (actif, cliqu√©, badge)

# ‚ö†Ô∏è Ne pas utiliser PyQt5 ni PyQt6
# ‚ö†Ô∏è Ne pas importer de biblioth√®ques externes
# Le code doit rester simple, modulaire, et maintenable.


from PySide6.QtCore import QSize, Qt
from PySide6.QtGui import QIcon
from PySide6.QtWidgets import QFrame, QPushButton, QVBoxLayout

from gui.images_paths import ICONS


class Sidebar(QFrame):
    def __init__(self, parent=None):
        super().__init__(parent)

        # D√©finir la largeur fixe de la Sidebar
        self.setFixedWidth(50)

        # Cr√©er le layout principal vertical
        layout = QVBoxLayout()
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(0)

        # Ajouter le bouton Home en haut
        self.home_button = QPushButton()
        self.home_button.setIcon(QIcon(ICONS["home"]))
        self.home_button.setIconSize(QSize(35, 35))
        self.home_button.setFixedSize(40, 40)
        layout.addWidget(self.home_button, alignment=Qt.AlignHCenter)

        # Ajouter un stretch pour pousser le reste en bas
        layout.addStretch()

        # Ajouter le bouton Settings en bas
        self.settings_button = QPushButton()
        self.settings_button.setIcon(QIcon(ICONS["settings"]))
        self.settings_button.setIconSize(QSize(30, 30))
        self.settings_button.setFixedSize(40, 40)
        layout.addWidget(self.settings_button, alignment=Qt.AlignHCenter)

        # Appliquer le layout √† la Sidebar
        self.setObjectName("Sidebar")
        self.setLayout(layout)

    def get_buttons(self):
        return {"home": self.home_button, "settings": self.settings_button}
